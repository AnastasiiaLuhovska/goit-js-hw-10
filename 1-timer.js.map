{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\nconst refs = {\n  button: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n}\n\nrefs.button.disabled = true\n\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = selectedDates[0];\n\n    if (date - Date.now() < 0){\n      iziToast.show({ title: 'Hey!', message:'Please choose a date in the future'})\n      refs.button.disabled = true\n      return\n    }\n\n    refs.button.disabled = false\n    userSelectedDate = date\n  },\n};\n\nflatpickr('#datetime-picker', options)\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = (number)=>{\n  return String(number).padStart(2, '0')\n}\n\nlet intervalID;\nconst getRestTime = ()=>{\n\n  const restTime = userSelectedDate - Date.now()\n  if (restTime <= 0){\n    clearInterval(intervalID)\n    refs.button.disabled = false\n    refs.input.disabled = false\n    return\n  }\n\n  const { days, hours, minutes, seconds } =  convertMs(restTime)\n  refs.days.textContent = addLeadingZero(days)\n  refs.hours.textContent = addLeadingZero(hours)\n  refs.minutes.textContent = addLeadingZero(minutes)\n  refs.seconds.textContent = addLeadingZero(seconds)\n}\n\nconst makeTimer = ()=>{\n  refs.button.disabled = true\n  refs.input.disabled = true\n  intervalID = setInterval(getRestTime, 1000)\n}\nrefs.button.addEventListener('click', makeTimer)"],"names":["refs","userSelectedDate","options","selectedDates","date","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","number","intervalID","getRestTime","restTime","makeTimer"],"mappings":"2FAGA,MAAMA,EAAO,CACX,OAAQ,SAAS,cAAc,cAAc,EAC7C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAA,EAAK,OAAO,SAAW,GAEvB,IAAIC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAOD,EAAc,CAAC,EAE5B,GAAIC,EAAO,KAAK,IAAG,EAAK,EAAE,CACxBC,EAAS,KAAK,CAAE,MAAO,OAAQ,QAAQ,oCAAoC,CAAC,EAC5EL,EAAK,OAAO,SAAW,GACvB,MACD,CAEDA,EAAK,OAAO,SAAW,GACvBC,EAAmBG,CACpB,CACH,EAEAE,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAkBC,GACf,OAAOA,CAAM,EAAE,SAAS,EAAG,GAAG,EAGvC,IAAIC,EACJ,MAAMC,EAAc,IAAI,CAEtB,MAAMC,EAAWhB,EAAmB,KAAK,IAAK,EAC9C,GAAIgB,GAAY,EAAE,CAChB,cAAcF,CAAU,EACxBf,EAAK,OAAO,SAAW,GACvBA,EAAK,MAAM,SAAW,GACtB,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAIL,EAAUU,CAAQ,EAC7DjB,EAAK,KAAK,YAAca,EAAeJ,CAAI,EAC3CT,EAAK,MAAM,YAAca,EAAeH,CAAK,EAC7CV,EAAK,QAAQ,YAAca,EAAeF,CAAO,EACjDX,EAAK,QAAQ,YAAca,EAAeD,CAAO,CACnD,EAEMM,EAAY,IAAI,CACpBlB,EAAK,OAAO,SAAW,GACvBA,EAAK,MAAM,SAAW,GACtBe,EAAa,YAAYC,EAAa,GAAI,CAC5C,EACAhB,EAAK,OAAO,iBAAiB,QAASkB,CAAS"}